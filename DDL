CREATE SCHEMA  lançamentos_bd;
USE lançamentos_bd;

-- Tabela de categorias
CREATE TABLE categorias(
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  descricao VARCHAR(255) NOT NULL,
  PRIMARY KEY (id))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- Tabela de estados
CREATE TABLE estados(
  sigla VARCHAR(2) NOT NULL,
  nome VARCHAR(100) NOT NULL,
  PRIMARY KEY (sigla))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- Tabela de cidade
CREATE TABLE cidade(
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  nome VARCHAR(255) NOT NULL,
  estado_sigla VARCHAR(2) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_cidade_estados1
    FOREIGN KEY (estado_sigla)
    REFERENCES estados (sigla)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Tabela de pessoas
CREATE TABLE pessoas (
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  nome VARCHAR(255) NOT NULL,
  ativo TINYINT(4) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Tabela de contatos
CREATE TABLE contatos(
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  nome VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  telefone VARCHAR(14) NOT NULL,
  pessoa_id BIGINT(20) NOT NULL,
  PRIMARY KEY (id, pessoa_id),
  UNIQUE INDEX email_UNIQUE (email ASC),
  CONSTRAINT fk_contatos_pessoa
    FOREIGN KEY (pessoa_id)
    REFERENCES pessoas (id)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Tabela de endereco
CREATE TABLE endereco(
  pessoa_id BIGINT(20) NOT NULL,
  logradouro VARCHAR(255) NOT NULL,
  numero VARCHAR(45) NOT NULL,
  complemento VARCHAR(255) NOT NULL,
  bairro VARCHAR(45) NOT NULL,
  cep VARCHAR(10) NOT NULL,
  cidade_id BIGINT(20) NOT NULL,
  PRIMARY KEY (pessoa_id),
  CONSTRAINT fk_endereco_cidade1
    FOREIGN KEY (cidade_id)
    REFERENCES cidade (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_endereco_pessoas1
    FOREIGN KEY (pessoa_id)
    REFERENCES pessoas (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Tabela de lancamentos
CREATE TABLE lancamentos(
  id BIGINT(20) NOT NULL AUTO_INCREMENT,
  descricao VARCHAR(255) NOT NULL,
  dt_vencimento DATE NOT NULL,
  dt_pagamento DATE NULL DEFAULT NULL,
  valor DECIMAL(10,2) NOT NULL,
  observacao TEXT NULL DEFAULT NULL,
  tipo ENUM('RECEITA', 'DESPESA') NOT NULL,
  pessoa_id BIGINT(20) NOT NULL,
  categoria_id BIGINT(20) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_lancamento_pessoa1
    FOREIGN KEY (pessoa_id)
    REFERENCES pessoas (id)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT fk_lancamentos_categorias1
    FOREIGN KEY (categoria_id)
    REFERENCES categorias (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

-- Alterações realizadas para troda do id na tabela pessoas para cpf

alter table contatos drop foreign key fk_contatos_pessoa;
alter table enderecos drop foreign key fk_endereco_pessoas1;
alter table lancamentos drop foreign key fk_lancamento_pessoa1;
alter table pessoas add column pessoa_cpf varchar(20) not null;
update pessoas set pessoa_cpf = '12345678910' where id = 1;
update pessoas set pessoa_cpf = '98765432111' where id = 2;
alter table pessoas modify column id bigint unique ;
alter table pessoas drop primary key;
alter table pessoas add primary key (pessoa_cpf);
alter table contatos add column pessoa_cpf varchar(20);
alter table contatos modify column id bigint unique auto_increment;
alter table contatos drop primary key;
alter table contatos add primary key(id);
update contatos c inner join pessoas p on c.pessoa_id = p.id set c.pessoa_cpf = p.pessoa_cpf;
alter table contatos add constraint pessoa3_cpf_fk foreign key (pessoa_cpf) references pessoas (pessoa_cpf);
alter table lancamentos add column pessoa_cpf varchar(20);
update lancamentos l inner join pessoas p on l.pessoa_id = p.id set l.pessoa_cpf = p.pessoa_cpf;
alter table lancamentos add constraint pessoa1_cpf_fk foreign key (pessoa_cpf) references pessoas (pessoa_cpf);
alter table enderecos add column pessoa2_cpf varchar(20);
update enderecos e inner join pessoas p on e.pessoa_id = p.id set e.pessoa2_cpf = p.pessoa_cpf;
alter table enderecos add constraint pessoa2_cpf_fk foreign key (pessoa2_cpf) references pessoas (pessoa_cpf);
